// Fallback v1.2
// Dustin Dowell 2014
// https://github.com/dustindowell22/Fallback


// Calculate
@function px($value){
	@return $value + px;
}
@function rem($value){
	$remValue: ($value / 16);
	@return $remValue + rem;
}


// Basic
@mixin rem($property, $values){
	@each $value in $values{
		@if ($value == type-of(string)) and ($value != x){
			#{$property}: $value;
		}
		@else if ($value != x){
			#{$property}: px($value);
			#{$property}: rem($value);
		}
	}
}


// Rem Block 4
@mixin remBlock($property, $top, $right, $bottom, $left){
	$propertyDash: $property + "-";

	// Position
	@if ($property == position){
		$propertyDash: "";
	}

	// Top
	@if ($top == type-of(string)) and ($top != x){
		#{$propertyDash}top: $top;
	}
	@else if ($top != x){
		#{$propertyDash}top: px($top);
		#{$propertyDash}top: rem($top);
	}

	// Right
	@if ($right == type-of(string)) and ($right != x){
		#{$propertyDash}right: $right;
	}
	@else if ($right != x){
		#{$propertyDash}right: px($right);
		#{$propertyDash}right: rem($right);
	}

	// Bottom
	@if ($bottom == type-of(string)) and ($bottom != x){
		#{$propertyDash}bottom: $bottom;
	}
	@else if ($bottom != x){
		#{$propertyDash}bottom: px($bottom);
		#{$propertyDash}bottom: rem($bottom);
	}

	// Left
	@if ($left == type-of(string)) and ($left != x){
		#{$propertyDash}left: $left;
	}
	@else if ($left != x){
		#{$propertyDash}left: px($left);
		#{$propertyDash}left: rem($left);
	}
}


// Width and Height
@mixin size($width, $height){
	@if ($width == type-of(string)) and ($width != x){
		width: $width;
	}
	@else if ($width != x){
		width: px($width);
		width: rem($width);
	}

	@if ($height == type-of(string)) and ($height != x){
		height: $height;
	}
	@else if ($height != x){
		height: px($height);
		height: rem($height);
	}
}


// Translate
@mixin translate($x, $y, $z){
	// X
	@if ($x == type-of(string)) and ($x != x){
		transform: translateX($x);
	}
	@else if ($x != x){
		transform: translateX(px($x));
		transform: translateX(rem($x));
	}

	// Y
	@if ($y == type-of(string)) and ($y != x){
		transform: translateY($y);
	}
	@else if ($y != x){
		transform: translateY(px($y));
		transform: translateY(rem($y));
	}

	// Z
	@if ($z == type-of(string)) and ($z != x){
		transform: translateY($z);
	}
	@else if ($z != x){
		transform: translateZ(px($z));
		transform: translateZ(rem($z));
	}
}